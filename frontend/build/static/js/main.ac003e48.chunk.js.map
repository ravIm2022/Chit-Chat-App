{"version":3,"sources":["components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","Context/ChatProvider.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/ChatPage.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/HomePage.js","App.js","index.js"],"names":["socket","selectedChatCompare","isSameSenderMargin","messages","m","i","userId","length","sender","_id","isSameSender","undefined","isLastMessage","isSameUser","getSender","loggedUser","users","name","ProfileModal","_ref","user","children","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","_Fragment","_jsx","onClick","IconButton","d","base","icon","ViewIcon","Modal","size","isCentered","ModalOverlay","ModalContent","h","ModalHeader","fontSize","fontFamily","justifyContent","ModalCloseButton","ModalBody","flexDir","alignItems","Image","borderRadius","boxSize","src","pic","alt","Text","md","email","ModalFooter","Button","ChatContext","createContext","ChatState","useContext","ChatProvider","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","Provider","value","ScrollableChat","ScrollableFeed","map","style","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","marginTop","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","mb","variant","colorScheme","CloseIcon","pl","UserListItem","Box","bg","_hover","background","color","w","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","_useState9","_useState10","renameloading","setRenameLoading","toast","useToast","_ChatState","handleSearch","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","config","_yield$axios$get","data","wrap","_context","prev","next","abrupt","headers","Authorization","token","axios","get","sent","console","log","t0","title","description","status","duration","isClosable","position","stop","_x","apply","arguments","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","response","message","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","FormControl","Input","placeholder","onChange","e","target","ml","isLoading","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","_useState11","_useState12","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","_yield$axios$post","key","post","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","p","overflowY","alignSelf","margin","className","onKeyDown","id","isRequired","Lottie","options","width","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","borderWidth","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","stringify","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","pt","justify","direction","align","getFullYear","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","Login","show","setShow","setEmail","password","setPassword","submitHandler","setItem","VStack","spacing","FormLabel","type","InputGroup","InputRightElement","Signup","handleClick","setName","confirmpassword","setConfirmpassword","setPic","_useState13","_useState14","picLoading","setPicLoading","accept","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","Container","maxW","centerContent","Tabs","isFitted","TabList","Tab","TabPanels","TabPanel","App","Route","path","component","HomePage","exact","ChatPage","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.ac003e48.chunk.js","sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"./animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\r\nlet socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      }\r\n      //give notification\r\n      else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    let timerLength = 3000;\r\n    setTimeout(() => {\r\n      let timeNow = new Date().getTime();\r\n      let timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    // height={50}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"410px\">\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\n// import { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst UserListItem = ({ user, handleFunction }) => {\r\n  // const { user } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      // console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/chat/group`,\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: ravi,guest,aditya\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={user._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              //<ChatLoading />\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n\r\n      <Stack\r\n        pt=\"8\"\r\n        pb=\"12\"\r\n        justify=\"space-between\"\r\n        direction={{\r\n          base: \"column-reverse\",\r\n          md: \"row\",\r\n        }}\r\n        align=\"center\"\r\n      >\r\n        <Text fontSize=\"sm\" color=\"subtle\">\r\n          &copy; {new Date().getFullYear()} Made by 🧡 Ravi Maurya.\r\n        </Text>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n\r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n  } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    console.log(userId);\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          Talk-A-Tive\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast, Text, Stack } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const history = useHistory();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // console.log(email, password);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      // console.log(JSON.stringify(data));\r\n      toast({\r\n        title: `Login Successful & \"RELOAD PAGE\"`,\r\n        status: \"success\",\r\n        duration: 6000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"10px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            value={password}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n\r\n      <Stack\r\n        pt=\"8\"\r\n        pb=\"12\"\r\n        justify=\"space-between\"\r\n        direction={{\r\n          base: \"column-reverse\",\r\n          md: \"row\",\r\n        }}\r\n        align=\"center\"\r\n      >\r\n        <Text fontSize=\"sm\" color=\"subtle\">\r\n          &copy; {new Date().getFullYear()} Made by 🧡 Ravi Maurya.\r\n        </Text>\r\n      </Stack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack, Stack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { Text } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    // console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      // console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    // console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dapphcqtq/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n\r\n      <Stack\r\n        pt=\"5\"\r\n        justify=\"space-between\"\r\n        direction={{\r\n          base: \"column-reverse\",\r\n          md: \"row\",\r\n        }}\r\n        align=\"center\"\r\n      >\r\n        <Text fontSize=\"sm\" color=\"subtle\">\r\n          &copy; {new Date().getFullYear()} Made by 🧡 Ravi Maurya.\r\n        </Text>\r\n      </Stack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\n\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\r\n          Talk-A-Tive\r\n        </Text>\r\n      </Box>\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs isFitted variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab>Login</Tab>\r\n            <Tab>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import \"./App.css\";\nimport ChatPage from \"./Pages/ChatPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={HomePage} exact />\n      <Route path=\"/chats\" component={ChatPage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}